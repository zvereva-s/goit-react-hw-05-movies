{"version":3,"file":"static/js/161.577a793e.chunk.js","mappings":"yQACA,GAAgB,SAAW,kCAAkC,IAAM,8B,SCKnE,SAASA,EAAT,GAAoC,IAATC,EAAQ,EAARA,KACfC,EAAqED,EAArEC,MAAOC,EAA8DF,EAA9DE,SAAUC,EAAoDH,EAApDG,OAAQC,EAA4CJ,EAA5CI,aAAcC,EAA8BL,EAA9BK,YAAaC,EAAiBN,EAAjBM,aACtDC,EAAeJ,EAAOK,KAAI,SAAAC,GAAE,OAAIA,EAAGC,QAAMC,KAAK,MAC9CC,EAA2B,GAAfR,EACZS,EAAOP,EAAaQ,MAAM,EAAG,GAGnC,OACI,iBAAKC,UAAWC,EAAAA,IAAhB,WACQ,iBAAKD,UAAWC,EAAAA,SAAhB,WACI,gBAAKD,UAAWC,EAAAA,IAAYC,IAAG,yDAAoDZ,GAAea,IAAKjB,KACvG,iBAAKc,UAAWC,EAAAA,QAAhB,WACI,kCAAQf,EAAR,aAAkBY,EAAlB,QACJ,4BACI,mBAAOE,UAAWC,EAAAA,MAAlB,WACI,2BACI,0CACA,0BAAKJ,EAAL,WAEJ,2BACI,wCACI,wBAAKV,QAET,2BACI,oCACJ,wBAAKK,mBAMrB,iBAAKQ,UAAWC,EAAAA,eAAhB,WACI,gBAAID,UAAWC,EAAAA,KAAf,WACA,yBAAI,SAAC,KAAD,CAAMG,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAER,SAAC,KAAD,UAKhB,OAAeC,EAAAA,EAAAA,MAAKrB,GAEpBA,EAAgBsB,aAAe,CAC3BrB,KAAK,I,cCjDT,EAA0B,6BAA1B,EAAgE,4BAAhE,EAAgG,uB,UC+DhG,MAxDA,WAAwB,IAAD,EACXsB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAC/BxB,KAAM,GACNyB,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACID,GAAS,SAAAE,GAAS,yBACXA,GADW,IAEdL,SAAS,OAHjB,mBAM2BM,EAAAA,EAAAA,IAAgBT,GAN3C,OAMcU,EANd,OAOQJ,GAAS,SAAAE,GAAS,yBACXA,GADW,IAEd9B,KAAMgC,OATlB,gDAaQJ,GAAS,SAAAE,GAAS,yBACXA,GADW,IAEdJ,MAAK,UAfjB,yBAmBQE,GAAS,SAAAE,GAAS,yBACXA,GADW,IAEdL,SAAS,OArBrB,6EADY,uBAAC,WAAD,wBA0BZQ,KACD,CAACX,IAEJ,IAAMY,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKV,aAAT,eAAgBS,OAAQ,IAG7BpC,EAAyB2B,EAAzB3B,KAAMyB,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MACjBY,EAASC,OAAOC,KAAKxC,GAAMyC,OAAS,EAG1C,OADAC,QAAQC,IAAI3C,IAER,iBAAKe,UAAWC,EAAhB,UACKS,IAAW,SAACmB,EAAA,QAAD,IACXlB,IAAW,cAAGX,UAAWC,EAAd,6BACXsB,IAAU,mBAAQvB,UAAWC,EAAe6B,KAAK,SAASC,QAVpD,kBAAMZ,EAASE,IAUX,qBACVE,IAAU,SAAC,EAAD,CAAiBtC,KAAMA,Q,UC/C9C,MATA,WACI,OACI,2BACI,SAAC+C,EAAA,EAAD,WACI,SAAC,EAAD,U,qDCNhB,MAA4B,6B,SCS5B,MAPA,YAAkC,IAAbC,EAAY,EAAZA,SACjB,OACI,gBAAKjC,UAAWC,EAAhB,SACKgC,M,wFCLb,EAAsB,oB,SCWtB,MAPA,WACI,OACI,gBAAKjC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAAWiC,MAAM,OAAOC,UAAU,gB,iMCNxCC,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CAAEC,QAAS,sCAIVC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,qBAAsB,CACpDH,OAAQ,CACJI,KAAM,KAHe,uBACtB1B,EADsB,EACtBA,KADsB,kBAOtBA,EAAK2B,SAPiB,2CAAH,qDAUjB5B,EAAe,mCAAG,WAAOT,GAAP,yFACN6B,EAASM,IAAT,gBAAsBnC,IADhB,uBACpBU,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAKf4B,EAAY,mCAAG,WAAOtC,GAAP,yFACD6B,EAASM,IAAT,gBAAsBnC,EAAtB,aADC,uBAChBU,EADgB,EAChBA,KADgB,kBAEjBA,EAAK6B,MAFY,2CAAH,sDAIZC,EAAe,mCAAG,WAAOxC,GAAP,yFACJ6B,EAASM,IAAT,gBAAsBnC,EAAtB,aADI,uBACnBU,EADmB,EACnBA,KADmB,kBAEpBA,EAAK2B,SAFe,2CAAH,sDAKfI,EAAe,mCAAG,WAAMC,GAAN,yFACJb,EAASM,IAAI,eAAgB,CAChDH,OAAQ,CACJW,MAAOD,KAHY,uBACnBhC,EADmB,EACnBA,KADmB,kBAMpBA,EAAK2B,SANe,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/module/SingleMovie/SingleMovieItem/singleMovieItem.module.css?b6c2","module/SingleMovie/SingleMovieItem/SingleMovieItem.jsx","webpack://goit-react-hw-05-movies/./src/module/SingleMovie/singleMovie.module.css?b888","module/SingleMovie/SingleMovie.jsx","pages/SingleMoviePage/SingleMoviePage.jsx","webpack://goit-react-hw-05-movies/./src/shared/components/Container/container.module.css?d150","shared/components/Container/Container.jsx","webpack://goit-react-hw-05-movies/./src/shared/components/Loader/loader.module.css?6689","shared/components/Loader/Loader.jsx","shared/service/API/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info_box\":\"singleMovieItem_info_box__EUEQ-\",\"img\":\"singleMovieItem_img__4dGsd\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Outlet } from \"react-router-dom\";\n\nimport styles from './singleMovieItem.module.css';\n\nfunction SingleMovieItem({ item }) {\n    const { title, overview, genres, vote_average, poster_path, release_date } = item;\n    const genresString = genres.map(el => el.name).join(', ');\n    const userScore = vote_average * 10;\n    const year = release_date.slice(0, 4);\n    \n\n    return (\n        <div className={styles.box}>\n                <div className={styles.info_box}>\n                    <img className={styles.img} src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`} alt={title} />\n                    <div className={styles.wrapper}>\n                        <h3>{`${title} (${year})`}</h3>\n                    <table>\n                        <tbody className={styles.tbody}>\n                            <tr>\n                                <td>User Score: </td>\n                                <td>{userScore}%</td>\n                            </tr>\n                            <tr>\n                                <td>Overview: </td>\n                                    <td>{overview}</td>\n                                </tr>    \n                                <tr>\n                                    <td>Genres</td>\n                                <td>{genresString}</td>\n                                </tr>\n                        </tbody>\n                    </table>\n                    </div>\n                </div>\n                <div className={styles.additional_box}>\n                    <ul className={styles.list}>\n                    <li><Link to='cast'>Cast</Link></li>\n                    <li><Link to='reviews'>Reviews</Link></li>\n                </ul>    \n                <Outlet />\n                </div>\n            </div>\n    )\n }\nexport default memo(SingleMovieItem);\n\nSingleMovieItem.defaultProps = {\n    item:{},\n}\nSingleMovieItem.propTypes = {\n    item: PropTypes.objectOf(\n        PropTypes.shape({\n            title: PropTypes.string,\n            overview: PropTypes.string,\n            genres: PropTypes.array,\n            vote_average: PropTypes.string,\n            poster_path: PropTypes.string,\n            release_date: PropTypes.string,\n        })\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"singleMovie_wrapper__kyPx3\",\"button\":\"singleMovie_button__BZMkn\",\"p\":\"singleMovie_p__Rg4lu\"};","import { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\n\nimport SingleMovieItem from './SingleMovieItem';\nimport { getMovieDetails } from 'shared/service/API/themoviedb';\nimport styles from './singleMovie.module.css';\nimport Loader from 'shared/components/Loader';\n\nfunction SingleMovie() {\n    const { id } = useParams();\n    const [state, setState] = useState({\n        item: [],\n        loading: false,\n        error: null,\n    });\n\n    useEffect(() => {\n        async function fetchMovieDetails() {\n            setState(prevState => ({\n                ...prevState,\n                loading: true,\n            }))\n            try {\n                const data = await getMovieDetails(id);\n                setState(prevState => ({\n                    ...prevState,\n                    item: data,\n                }));\n            }\n            catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error\n                }))\n            }\n            finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }))\n            }\n        }\n        fetchMovieDetails();\n    }, [id]);\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from || \"/\";\n    const goBack = () => navigate(from);\n\n    const { item, loading, error } = state;\n    const isItem = Object.keys(item).length > 0;\n\n    console.log(item);\n    return (\n        <div className={styles.wrapper}>\n            {loading && <Loader />}\n            {error &&   <p className={styles.p}>Movie not found</p>}\n            {isItem && <button className={styles.button} type='button' onClick={goBack}>Go back</button>}\n            {isItem && <SingleMovieItem item={item}/>}\n        </div>\n    )\n}\n\nexport default SingleMovie;\n\n\n   \n","import SingleMovie from \"module/SingleMovie\";\nimport Container from \"shared/components/Container\";\n\nfunction SingleMoviePage() { \n    return (\n        <main>\n            <Container>\n                <SingleMovie />\n            </Container>\n        </main>\n    )\n};\nexport default SingleMoviePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_container__7D7mb\"};","import PropTypes from 'prop-types';\nimport styles from './container.module.css';\n\nfunction Container({ children }) {\n    return (\n        <div className={styles.container}>\n            {children}\n        </div>\n    )\n}\nexport default Container;\n\nContainer.propTypes = {\n    children: PropTypes.node,\n}","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"loader_box__6R4dw\"};","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { ThreeDots } from 'react-loader-spinner';\nimport styles from './loader.module.css';\n\n\nfunction Loader() {\n    return (\n        <div className={styles.box}>\n            <ThreeDots color=\"grey\" ariaLabel='loading' />\n        </div>);\n}\n\nexport default Loader;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: { api_key: 'de419034fa7ae645a6c15de713b25b76' },\n    \n})\n\nexport const getTrendingMovies = async () => {\n    const {data} = await instance.get('trending/movie/day', {\n        params: {\n            page: 1,\n        }\n    });\n\n    return data.results;\n}\n\nexport const getMovieDetails = async (id) => {\n    const {data} = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const getMovieCast = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data.cast;\n}\nexport const getMovieReviews = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data.results;\n}\n\nexport const getMoviesSearch = async(search) => {\n    const { data } = await instance.get('search/movie', {\n        params: {\n            query: search,\n        }\n    });\n    return data.results;\n}"],"names":["SingleMovieItem","item","title","overview","genres","vote_average","poster_path","release_date","genresString","map","el","name","join","userScore","year","slice","className","styles","src","alt","to","memo","defaultProps","id","useParams","useState","loading","error","state","setState","useEffect","prevState","getMovieDetails","data","fetchMovieDetails","navigate","useNavigate","from","useLocation","isItem","Object","keys","length","console","log","Loader","type","onClick","Container","children","color","ariaLabel","instance","axios","baseURL","params","api_key","getTrendingMovies","get","page","results","getMovieCast","cast","getMovieReviews","getMoviesSearch","search","query"],"sourceRoot":""}